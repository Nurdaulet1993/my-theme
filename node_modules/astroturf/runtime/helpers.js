"use strict";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/* eslint-disable react/no-multi-comp */
const React = require('react'); // eslint-disable-line import/no-extraneous-dependencies


const getName = (name, C) => `${name}(${C.displayName || C.name || C})`;

function mapProps(mapper) {
  return Component => Object.assign(React.forwardRef((p, ref) => React.createElement(Component, _extends({
    ref: ref
  }, mapper(p)))), {
    isAstroturf: true,
    displayName: getName('mapProps', Component)
  });
}

function withProps(objOrMapper) {
  return Component => Object.assign(React.forwardRef((p, ref) => React.createElement(Component, _extends({
    ref: ref
  }, p, typeof objOrMapper === 'function' ? objOrMapper(p) : objOrMapper))), {
    isAstroturf: true,
    displayName: getName('withProps', Component)
  });
}

module.exports = {
  mapProps,
  withProps
};